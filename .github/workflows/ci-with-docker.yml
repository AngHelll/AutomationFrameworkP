name: CI with Docker - Practice

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Manual trigger for practice
  workflow_dispatch:

jobs:
  test-with-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker Image
        run: |
          docker build -t automation-framework:${{ github.sha }} .
          docker tag automation-framework:${{ github.sha }} automation-framework:latest
      
      - name: Run Pytest Tests in Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/reports:/app/reports \
            -v ${{ github.workspace }}/logs:/app/logs \
            -v ${{ github.workspace }}/screenshots:/app/screenshots \
            automation-framework:latest \
            pytest -n auto -v --html=reports/test_report.html --self-contained-html
      
      - name: Run BDD Tests in Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/reports:/app/reports \
            automation-framework:latest \
            behave -v
      
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-test-reports
          path: |
            reports/
            logs/
            screenshots/
          retention-days: 7
      
      - name: Display Test Summary
        if: always()
        run: |
          echo "## 🐳 Docker Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tests completed in Docker container" >> $GITHUB_STEP_SUMMARY
          echo "- Image: automation-framework:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Runner: ubuntu-latest" >> $GITHUB_STEP_SUMMARY

  # Compare: Same tests WITHOUT Docker
  test-without-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Pytest Tests Directly
        run: pytest -n auto -v --html=reports/test_report.html --self-contained-html
      
      - name: Run BDD Tests Directly
        run: behave -v
      
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: direct-test-reports
          path: reports/
          retention-days: 7
      
      - name: Display Test Summary
        if: always()
        run: |
          echo "## 💻 Direct Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tests completed directly on runner" >> $GITHUB_STEP_SUMMARY
          echo "- Python: 3.11" >> $GITHUB_STEP_SUMMARY
          echo "- Runner: ubuntu-latest" >> $GITHUB_STEP_SUMMARY

  # Performance comparison
  compare-performance:
    needs: [test-with-docker, test-without-docker]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Performance Summary
        run: |
          echo "## ⚡ Performance Comparison" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Docker Approach" >> $GITHUB_STEP_SUMMARY
          echo "- Build time: ~2-3 minutes (first time)" >> $GITHUB_STEP_SUMMARY
          echo "- Test execution: Similar to direct" >> $GITHUB_STEP_SUMMARY
          echo "- Total: Slower due to build" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Direct Approach" >> $GITHUB_STEP_SUMMARY
          echo "- Setup time: ~30 seconds (cached)" >> $GITHUB_STEP_SUMMARY
          echo "- Test execution: Same" >> $GITHUB_STEP_SUMMARY
          echo "- Total: Faster overall" >> $GITHUB_STEP_SUMMARY

